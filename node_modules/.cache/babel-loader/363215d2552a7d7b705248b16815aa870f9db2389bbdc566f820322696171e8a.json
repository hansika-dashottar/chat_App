{"ast":null,"code":"var _jsxFileName = \"/Users/hipl/Documents/Tasks/chatApp/chatFrontend/my-app/src/RoomCreationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./RoomCreationPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoomCreationPage = () => {\n  _s();\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\"); // This will be used for joining a room\n  const [createdRoom, setCreatedRoom] = useState(null);\n  const [isJoinRoom, setIsJoinRoom] = useState(false); // Track if user is joining a room\n  const navigate = useNavigate();\n\n  // Simulate room creation (Replace with actual backend API)\n  const handleCreateRoom = () => {\n    if (roomName.trim()) {\n      // Simulate creating a room with an ID (backend call would return this)\n      const generatedRoomID = \"ROOM\" + Math.floor(Math.random() * 1000);\n      setCreatedRoom({\n        name: roomName,\n        id: generatedRoomID\n      });\n\n      // Simulate backend room creation logic\n      // Backend code would look like: socket.emit(\"createRoom\", roomName)\n      alert(`Room \"${roomName}\" created with ID: ${generatedRoomID}`);\n    } else {\n      alert(\"Please enter a room name!\");\n    }\n  };\n\n  // Simulate joining a room (Replace with actual backend API)\n  const handleJoinRoom = () => {\n    if (roomID.trim()) {\n      // Simulate backend joining logic\n      alert(`Joining room: ${roomID}`);\n      navigate(`/chat/${roomID}`); // Navigate to the chat room\n    } else {\n      alert(\"Please enter a valid room ID!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Room Creation / Join\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your room name\",\n      value: roomName,\n      onChange: e => setRoomName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateRoom,\n        disabled: isJoinRoom,\n        children: \"Create Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsJoinRoom(true),\n        disabled: createdRoom,\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isJoinRoom && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter room ID\",\n        value: roomID,\n        onChange: e => setRoomID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoinRoom,\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), createdRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"created-room\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Room Created: \", createdRoom.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Room ID: \", createdRoom.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(`/chat/${createdRoom.id}`),\n        children: \"Go to Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomCreationPage, \"hrRJKL+L91p4VhplDM11um3RagQ=\", false, function () {\n  return [useNavigate];\n});\n_c = RoomCreationPage;\nexport default RoomCreationPage;\nvar _c;\n$RefreshReg$(_c, \"RoomCreationPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomCreationPage","_s","roomName","setRoomName","roomID","setRoomID","createdRoom","setCreatedRoom","isJoinRoom","setIsJoinRoom","navigate","handleCreateRoom","trim","generatedRoomID","Math","floor","random","name","id","alert","handleJoinRoom","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/hipl/Documents/Tasks/chatApp/chatFrontend/my-app/src/RoomCreationPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./RoomCreationPage.css\";\n\nconst RoomCreationPage = () => {\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\"); // This will be used for joining a room\n  const [createdRoom, setCreatedRoom] = useState(null);\n  const [isJoinRoom, setIsJoinRoom] = useState(false); // Track if user is joining a room\n  const navigate = useNavigate();\n\n  // Simulate room creation (Replace with actual backend API)\n  const handleCreateRoom = () => {\n    if (roomName.trim()) {\n      // Simulate creating a room with an ID (backend call would return this)\n      const generatedRoomID = \"ROOM\" + Math.floor(Math.random() * 1000);\n      setCreatedRoom({ name: roomName, id: generatedRoomID });\n\n      // Simulate backend room creation logic\n      // Backend code would look like: socket.emit(\"createRoom\", roomName)\n      alert(`Room \"${roomName}\" created with ID: ${generatedRoomID}`);\n    } else {\n      alert(\"Please enter a room name!\");\n    }\n  };\n\n  // Simulate joining a room (Replace with actual backend API)\n  const handleJoinRoom = () => {\n    if (roomID.trim()) {\n      // Simulate backend joining logic\n      alert(`Joining room: ${roomID}`);\n      navigate(`/chat/${roomID}`); // Navigate to the chat room\n    } else {\n      alert(\"Please enter a valid room ID!\");\n    }\n  };\n\n  return (\n    <div className=\"room-container\">\n      <h2>Room Creation / Join</h2>\n      \n      {/* Room Name Input */}\n      <input\n        type=\"text\"\n        placeholder=\"Enter your room name\"\n        value={roomName}\n        onChange={(e) => setRoomName(e.target.value)}\n      />\n\n      {/* Horizontal Buttons */}\n      <div className=\"room-buttons\">\n        <button onClick={handleCreateRoom} disabled={isJoinRoom}>\n          Create Room\n        </button>\n        <button\n          onClick={() => setIsJoinRoom(true)}\n          disabled={createdRoom}\n        >\n          Join Room\n        </button>\n      </div>\n\n      {/* Show room ID input if user chooses to join a room */}\n      {isJoinRoom && (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Enter room ID\"\n            value={roomID}\n            onChange={(e) => setRoomID(e.target.value)}\n          />\n          <button onClick={handleJoinRoom}>Join Room</button>\n        </>\n      )}\n\n      {/* Show created room details */}\n      {createdRoom && (\n        <div className=\"created-room\">\n          <h3>Room Created: {createdRoom.name}</h3>\n          <p>Room ID: {createdRoom.id}</p>\n          <button onClick={() => navigate(`/chat/${createdRoom.id}`)}>\n            Go to Room\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoomCreationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}