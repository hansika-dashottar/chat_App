{"ast":null,"code":"var _jsxFileName = \"/Users/hipl/Documents/Tasks/chatApp/chatFrontend/my-app/src/ChatRoomPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './ChatRoomPage.css'; // Importing the CSS for styling\n\n// Replace with your actual backend URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://192.168.101.32:4000\");\nconst ChatRoomPage = ({\n  roomID,\n  username\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  // Listen for incoming messages when the component is mounted\n  useEffect(() => {\n    socket.on('receiveMessage', newMessage => {\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    });\n\n    // Cleanup listener when component is unmounted\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, []);\n\n  // Handle sending a message\n  const sendMessage = () => {\n    if (message.trim()) {\n      const newMessage = {\n        sender: username,\n        text: message,\n        roomID: roomID\n      };\n\n      // Emit the message to the server\n      socket.emit('sendMessage', newMessage);\n\n      // Add the message to local state (for immediate display)\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n\n      // Clear the input field\n      setMessage('');\n    }\n  };\n\n  // Handle the Enter key press to send the message\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-room-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Room: \", roomID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", roomID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyDown: handleKeyPress // Listen for Enter key press\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoomPage, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n_c = ChatRoomPage;\nexport default ChatRoomPage;\nvar _c;\n$RefreshReg$(_c, \"ChatRoomPage\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","ChatRoomPage","roomID","username","_s","message","setMessage","messages","setMessages","on","newMessage","prevMessages","off","sendMessage","trim","sender","text","emit","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","target","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/Users/hipl/Documents/Tasks/chatApp/chatFrontend/my-app/src/ChatRoomPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './ChatRoomPage.css';  // Importing the CSS for styling\n\n// Replace with your actual backend URL\nconst socket = io(\"http://192.168.101.32:4000\");\n\nconst ChatRoomPage = ({ roomID, username }) => {\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  // Listen for incoming messages when the component is mounted\n  useEffect(() => {\n    socket.on('receiveMessage', (newMessage) => {\n      setMessages((prevMessages) => [...prevMessages, newMessage]);\n    });\n\n    // Cleanup listener when component is unmounted\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, []);\n\n  // Handle sending a message\n  const sendMessage = () => {\n    if (message.trim()) {\n      const newMessage = {\n        sender: username,\n        text: message,\n        roomID: roomID,\n      };\n\n      // Emit the message to the server\n      socket.emit('sendMessage', newMessage);\n\n      // Add the message to local state (for immediate display)\n      setMessages((prevMessages) => [...prevMessages, newMessage]);\n\n      // Clear the input field\n      setMessage('');\n    }\n  };\n\n  // Handle the Enter key press to send the message\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"chat-room-container\">\n      {/* Header */}\n      <div className=\"chat-room-header\">\n        <h2>Room: {roomID}</h2>\n        <p>ID: {roomID}</p>\n      </div>\n\n      {/* Messages Display */}\n      <div className=\"chat-messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className=\"chat-message\">\n            <strong>{msg.sender}:</strong> {msg.text}\n          </div>\n        ))}\n      </div>\n\n      {/* Input Field */}\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Type a message...\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          onKeyDown={handleKeyPress}  // Listen for Enter key press\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatRoomPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}