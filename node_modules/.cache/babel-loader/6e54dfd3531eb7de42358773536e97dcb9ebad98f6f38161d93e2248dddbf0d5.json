{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./RoomCreationPage.css\";\n\n// const RoomCreationPage = () => {\n//   const [roomName, setRoomName] = useState(\"\");\n//   const [roomID, setRoomID] = useState(\"\"); // This will be used for joining a room\n//   const [createdRoom, setCreatedRoom] = useState(null);\n//   const [isJoinRoom, setIsJoinRoom] = useState(false); // Track if user is joining a room\n//   const navigate = useNavigate();\n\n//   // Simulate room creation (Replace with actual backend API)\n//   const handleCreateRoom = () => {\n//     if (roomName.trim()) {\n//       // Simulate creating a room with an ID (backend call would return this)\n//       const generatedRoomID = \"ROOM\" + Math.floor(Math.random() * 1000);\n//       setCreatedRoom({ name: roomName, id: generatedRoomID });\n\n//       // Simulate backend room creation logic\n//       // Backend code would look like: socket.emit(\"createRoom\", roomName)\n//       alert(`Room \"${roomName}\" created with ID: ${generatedRoomID}`);\n//     } else {\n//       alert(\"Please enter a room name!\");\n//     }\n//   };\n\n//   // Simulate joining a room (Replace with actual backend API)\n//   const handleJoinRoom = () => {\n//     if (roomID.trim()) {\n//       // Simulate backend joining logic\n//       alert(`Joining room: ${roomID}`);\n//       navigate(`/chat/${roomID}`); // Navigate to the chat room\n//     } else {\n//       alert(\"Please enter a valid room ID!\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"room-container\">\n//       <h2>Room Creation / Join</h2>\n\n//       {/* Room Name Input */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Enter your room name\"\n//         value={roomName}\n//         onChange={(e) => setRoomName(e.target.value)}\n//         disabled={isJoinRoom || createdRoom} // Disable when joining or room is created\n//       />\n\n//       {/* Horizontal Buttons */}\n//       <div className=\"room-buttons\">\n//         <button\n//           onClick={handleCreateRoom}\n//           disabled={isJoinRoom || createdRoom}\n//           className=\"room-button\"\n//         >\n//           Create Room\n//         </button>\n//         <button\n//           onClick={() => setIsJoinRoom(true)}\n//           disabled={createdRoom}\n//           className=\"room-button\"\n//         >\n//           Join Room\n//         </button>\n//       </div>\n\n//       {/* Show room ID input if user chooses to join a room */}\n//       {isJoinRoom && (\n//         <>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter room ID\"\n//             value={roomID}\n//             onChange={(e) => setRoomID(e.target.value)}\n//             disabled={createdRoom} // Disable if room is created\n//           />\n//           <button onClick={handleJoinRoom} className=\"join-button\">\n//             Join Room\n//           </button>\n//         </>\n//       )}\n\n//       {/* Show created room details */}\n//       {createdRoom && (\n//         <div className=\"created-room\">\n//           <h3>Room Created: {createdRoom.name}</h3>\n//           <p>Room ID: {createdRoom.id}</p>\n//           <button\n//             onClick={() => navigate(`/chat/${createdRoom.id}`)}\n//             className=\"go-to-room-button\"\n//           >\n//             Go to Room\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default RoomCreationPage;","map":{"version":3,"names":[],"sources":["/Users/hipl/Documents/Tasks/chatApp/chatFrontend/my-app/src/RoomCreationPage.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./RoomCreationPage.css\";\n\n// const RoomCreationPage = () => {\n//   const [roomName, setRoomName] = useState(\"\");\n//   const [roomID, setRoomID] = useState(\"\"); // This will be used for joining a room\n//   const [createdRoom, setCreatedRoom] = useState(null);\n//   const [isJoinRoom, setIsJoinRoom] = useState(false); // Track if user is joining a room\n//   const navigate = useNavigate();\n\n//   // Simulate room creation (Replace with actual backend API)\n//   const handleCreateRoom = () => {\n//     if (roomName.trim()) {\n//       // Simulate creating a room with an ID (backend call would return this)\n//       const generatedRoomID = \"ROOM\" + Math.floor(Math.random() * 1000);\n//       setCreatedRoom({ name: roomName, id: generatedRoomID });\n\n//       // Simulate backend room creation logic\n//       // Backend code would look like: socket.emit(\"createRoom\", roomName)\n//       alert(`Room \"${roomName}\" created with ID: ${generatedRoomID}`);\n//     } else {\n//       alert(\"Please enter a room name!\");\n//     }\n//   };\n\n//   // Simulate joining a room (Replace with actual backend API)\n//   const handleJoinRoom = () => {\n//     if (roomID.trim()) {\n//       // Simulate backend joining logic\n//       alert(`Joining room: ${roomID}`);\n//       navigate(`/chat/${roomID}`); // Navigate to the chat room\n//     } else {\n//       alert(\"Please enter a valid room ID!\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"room-container\">\n//       <h2>Room Creation / Join</h2>\n      \n//       {/* Room Name Input */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Enter your room name\"\n//         value={roomName}\n//         onChange={(e) => setRoomName(e.target.value)}\n//         disabled={isJoinRoom || createdRoom} // Disable when joining or room is created\n//       />\n\n//       {/* Horizontal Buttons */}\n//       <div className=\"room-buttons\">\n//         <button\n//           onClick={handleCreateRoom}\n//           disabled={isJoinRoom || createdRoom}\n//           className=\"room-button\"\n//         >\n//           Create Room\n//         </button>\n//         <button\n//           onClick={() => setIsJoinRoom(true)}\n//           disabled={createdRoom}\n//           className=\"room-button\"\n//         >\n//           Join Room\n//         </button>\n//       </div>\n\n//       {/* Show room ID input if user chooses to join a room */}\n//       {isJoinRoom && (\n//         <>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter room ID\"\n//             value={roomID}\n//             onChange={(e) => setRoomID(e.target.value)}\n//             disabled={createdRoom} // Disable if room is created\n//           />\n//           <button onClick={handleJoinRoom} className=\"join-button\">\n//             Join Room\n//           </button>\n//         </>\n//       )}\n\n//       {/* Show created room details */}\n//       {createdRoom && (\n//         <div className=\"created-room\">\n//           <h3>Room Created: {createdRoom.name}</h3>\n//           <p>Room ID: {createdRoom.id}</p>\n//           <button\n//             onClick={() => navigate(`/chat/${createdRoom.id}`)}\n//             className=\"go-to-room-button\"\n//           >\n//             Go to Room\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default RoomCreationPage;\n\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}